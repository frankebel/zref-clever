\documentclass{book}

\input{regression-test}

\ExplSyntaxOn
\debug_on:n { check-declarations , deprecation }
\ExplSyntaxOff

\usepackage{zref-clever}

% This file is intended to test language setup, including '\zcDeclareLanguage'
% and '\zcDeclareLanguageAlias'.

\START

\ExplSyntaxOn

\TEST { Built-in~language~and~aliases }
  {
    \clist_map_inline:nn
      {
        english ,
        american ,
        australian ,
        british ,
        canadian ,
        newzealand ,
        UKenglish ,
        USenglish ,
        french ,
        acadian ,
        german ,
        ngerman ,
        austrian ,
        naustrian ,
        swissgerman ,
        nswissgerman ,
        portuguese ,
        brazilian ,
        brazil ,
        portuges ,
        spanish ,
        dutch ,
        italian ,
        russian ,
      }
      {
        \tl_show:c
          { \__zrefclever_language_varname:n {#1} }
      }
  }

\TEST { Declare~existing~language }
  {
    \zcDeclareLanguage { french }
    \zcDeclareLanguage { german }
  }

\TEST { Declare~new~language }
  {
    \zcDeclareLanguage
      [ variants = { a,b,c } , gender = { x,y,z } , allcaps ] { elvish }
    \seq_show:c
      { \__zrefclever_opt_varname_language:nnn{elvish}{variants}{seq} }
    \seq_show:c
      { \__zrefclever_opt_varname_language:nnn{elvish}{gender}{seq} }
    \bool_show:c
      { \__zrefclever_opt_varname_language:nnn{elvish}{allcaps}{bool} }
  }

\TEST { Declare~new~alias }
  {
    \zcDeclareLanguageAlias { nelvish } { elvish }
    \tl_show:c
      { \__zrefclever_language_varname:n {nelvish} }
  }

\TEST { Alias~to~unknown~language }
  {
    \zcDeclareLanguageAlias { english } { foobar }
  }

\ExplSyntaxOff

\OMIT
\begin{document}
\TIMO

\ExplSyntaxOn

\TEST { Preamble~only }
  {
    \zcDeclareLanguage { english }
    \zcDeclareLanguageAlias { myenglish } { english }
  }

\OMIT

\end{document}
