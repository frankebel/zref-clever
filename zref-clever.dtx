% \iffalse meta-comment
%
% File: zref-clever.dtx
%
% This file is part of the LaTeX package "zref-clever".
%
% Copyright (C) 2021  Gustavo Barros
%
% It may be distributed and/or modified under the conditions of the
% LaTeX Project Public License (LPPL), either version 1.3c of this
% license or (at your option) any later version.  The latest version
% of this license is in the file:
%
%    https://www.latex-project.org/lppl.txt
%
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
%
% This work is "maintained" (as per LPPL maintenance status) by
% Gustavo Barros.
%
% This work consists of the files zref-clever.dtx,
%                                 zref-clever.ins,
%                                 zref-clever.tex,
%                                 zref-clever-code.tex,
%           and the derived files zref-clever.sty and
%                                 zref-clever.pdf,
%                                 zref-clever-code.pdf.
%
% The released version of this package is available from CTAN.
%
% -----------------------------------------------------------------------
%
% The development version of the package can be found at
%
%    https://github.com/gusbrs/zref-clever
%
% for those people who are interested.
%
% -----------------------------------------------------------------------
%
% \fi
%
% \iffalse
%<*driver>
\documentclass{l3doc}
% Have \GetFileInfo pick up date and version data
\usepackage{zref-check}
\NewDocumentCommand\opt{m}{\texttt{#1}}
\MakeShortVerb{\|}
\begin{document}
  \DocInput{zref-clever.dtx}
\end{document}
%</driver>
% \fi
%
%
% \begin{documentation}
%
%
% \end{documentation}
%
%
%
% \begin{implementation}
%
% \section{Initial setup}
%
% Start the \pkg{DocStrip} guards.
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
% Identify the internal prefix (\LaTeX3 \pkg{DocStrip} convention).
%    \begin{macrocode}
%<@@=zrefclever>
%    \end{macrocode}
%
%
%
% Identify the package.
%    \begin{macrocode}
\ProvidesExplPackage {zref-clever} {2021-08-09} {0.1.0-alpha}
  {Do-what-I-mean cross-references based on zref}
%    \end{macrocode}
%
% \section{Dependencies}
%
%    \begin{macrocode}
\RequirePackage { zref-user }
\RequirePackage { zref-counter }
\RequirePackage { zref-titleref }
\RequirePackage { zref-abspage }% CHECK to sort pages. check if really needed.
\RequirePackage { translations }
%    \end{macrocode}
%
%
%
% \section{\pkg{zref} setup}
%
% We are interested in four basic label fields: the reference itself, the
% page, the counter and the title.  The page is handled by \pkg{zref} in its
% \pkg{zref-base} module.  `counter' and `title' are handled respectively by
% modules \pkg{zref-counter} and \pkg{zref-titleref}.  But the reference
% itself, stored by \pkg{zref} in the `default' field, is somewhat a disputed
% real estate.  In particular, the use of \cs{labelformat} will include there
% the reference ``prefix'' and complicate the job we are trying to do here.
% Hence, we isolate \cs{the}\meta{counter} and store it ``clean'' in
% \texttt{zc@thecounter} for reserved use.  We also store the counter
% \emph{value} in \texttt{zc@countervalue}.
%
%
% From the definition of \cs{@currentlabel} done inside \cs{refstepcounter} in
% 'texdoc source2e', section 'ltcounts.dtx'.  We just drop the \cs{\p@...}
% prefix.
%    \begin{macrocode}
\zref@newprop { zc@thecounter } { \cs:w the\@currentcounter \cs_end: }
%    \end{macrocode}
%
% \cs{c@}\meta{counter} contains the counter's numerical value, see 'texdoc
% source2e', section 'ltcounts.dtx'.
%    \begin{macrocode}
\zref@newprop { zc@countervalue } { \int_use:c { c@\@currentcounter } }
%    \end{macrocode}
%
%
%    \begin{macrocode}
\zref@addprop \ZREF@mainlist { zc@thecounter }
\zref@addprop \ZREF@mainlist { zc@countervalue }
%    \end{macrocode}
%
%
%
%    \begin{macrocode}
%
% TODO Now we must get these values from '\cl@<counter>' atbegindocument for
% each in a list of ``known'' counters (sectioning ones, see most important
% classes).
\tl_set:Nn \g_@@_counter_section_within_tl {chapter}
\tl_set:Nn \g_@@_counter_subsection_within_tl {section}

\zref@newprop { zc@withinvalue }
  {
    \bool_lazy_and:nnT
      {
        \tl_if_exist_p:c
          { g_@@_counter_ \tl_use:N \@currentcounter _within_tl }
      }
      {
        \cs_if_exist_p:c
          {
            c@ \use:c
              { g_@@_counter_ \tl_use:N \@currentcounter _within_tl }
          }
      }
      {
        \int_use:c
          {
            c@ \use:c
              { g_@@_counter_ \tl_use:N \@currentcounter _within_tl }
          }
      }
  }

\zref@addprop \ZREF@mainlist { zc@withinvalue }


%    \end{macrocode}
%
%
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
% \PrintIndex
%
% \end{implementation}
%
